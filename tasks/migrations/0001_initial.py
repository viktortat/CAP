# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-18 00:17
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tasksa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Заголовок задания')),
                ('opisan', ckeditor.fields.RichTextField(max_length=2000, verbose_name='Описание оплачиваемого задания')),
                ('opis_vipoln', models.TextField(max_length=2000, verbose_name='Что должен указать исполнитель для проверки выполнения задания')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('url_admin', models.URLField(verbose_name='Дополнительная информация для арбитров: Укажите, какой ресурс (URL) вы \t\t\t\t\t\tпредставляете в задании. Информация будет видна только вам и \tарбитрам \t\t\t\t\t(максимум 200 символов)')),
                ('url', models.URLField(blank=True, verbose_name='URL сайта (включая http://)Не обязательно')),
                ('price', models.FloatField(default=0.1, verbose_name='Вознаграждение исполнителю')),
                ('price_task', models.FloatField(default=10.0, verbose_name='Укажите сумму баланса задания')),
                ('tech', models.CharField(choices=[('ONE', 'Один пользователь - одно выполнение'), ('MNOGO', 'Задание можно выполнять многократно')], default='Выбор', max_length=30, verbose_name='Технология выполнения задания')),
                ('srock', models.CharField(choices=[('one_h', '1 час'), ('two_h', '2 часа'), ('six_h', '6 часов'), ('tvel_h', '12 часов'), ('one_d', '1 день'), ('two_d', '2 дня'), ('three_d', '3 дня'), ('five_d', '5 дней')], default='Выбор', max_length=10, verbose_name='Максимальный срок, отведённый на выполнение задания')),
                ('interval', models.CharField(choices=[('BEZ_INTER', 'Без интервала'), ('ONE_M', '1 минута'), ('TWO_M', '2 минуты'), ('FIVE_M', '5 минут'), ('TEN_M', '10 минут'), ('TWENTY_M', '20 минут'), ('THIRTY_M', '30 минут'), ('ONE_H', '1 час'), ('TWO_H', '2 часа'), ('SIX_H', '6 часов'), ('TVEL_H', '12 часов'), ('TWNTYF_H', '24 часа')], default='Выбор', max_length=10, verbose_name='Минимальный интервал очереди последовательной раздачи заданий')),
                ('porating', models.CharField(choices=[('VSEP', 'Все пользователи'), ('BEZREFER', 'Только пользователи без реферала'), ('MOIREFER', 'Только мой рефералы')], default='Выбор', max_length=10, verbose_name='По рейтингу серфера')),
                ('posex', models.CharField(choices=[('MEN_SEX', 'Мужчина'), ('WOOMEN_SEX', 'Женщина')], default='Выбор', max_length=10, verbose_name='По половому признаку')),
                ('odobren', models.BooleanField(default=False, verbose_name='Одобраить')),
                ('pravila', models.BooleanField(default=True, verbose_name='Я согласен(на) с правилами размещения рекламы на WMR_LOVE')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='TasksUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('us_opis_vipoln', models.TextField(max_length=1000, verbose_name='Ответ задания')),
                ('odobren', models.BooleanField(default=False, verbose_name='Одобрить')),
                ('start_task', models.DateTimeField(verbose_name='Время на выполнерия')),
                ('otvet_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('taskuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.Tasksa')),
            ],
            options={
                'db_table': 'task_users',
            },
        ),
    ]
